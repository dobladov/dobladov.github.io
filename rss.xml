<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Odyssey Codes RSS]]></title><description><![CDATA[I'm a Web Developer currently based in Berlin 🇩🇪, with true passion for open-source and building better platforms.]]></description><link>http://github.com/dylang/node-rss</link><generator>GatsbyJS</generator><lastBuildDate>Sun, 11 Apr 2021 22:07:16 GMT</lastBuildDate><item><title><![CDATA[How to configure a 4k screen in Linux]]></title><description><![CDATA[You just got a new cool 4K monitor, you opened it, connected it to your Linux device and the first thing you face is that you can't select…]]></description><link>https://odyssey.codes/blog/how-to-configure-a-4k-screen-in-linux/</link><guid isPermaLink="false">https://odyssey.codes/blog/how-to-configure-a-4k-screen-in-linux/</guid><pubDate>Sat, 18 Apr 2020 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;You just got a new cool 4K monitor, you opened it, connected it to your Linux device and the first thing you face is that you can’t select the maximum resolution for the screen.&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;My disappointment is immeasurable and my day is ruined. —Reviewbrah&lt;/p&gt;&lt;/blockquote&gt;&lt;h2 id=&quot;why-is-this-problem-happening&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#why-is-this-problem-happening&quot; aria-label=&quot;why is this problem happening permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Why is this problem happening?&lt;/h2&gt;&lt;p&gt;Apparently some screens might not give the correct &lt;a href=&quot;https://en.wikipedia.org/wiki/Extended_Display_Identification_Data&quot;&gt;EDID&lt;/a&gt; information, in my case a &lt;a href=&quot;https://www.samsung.com/us/business/support/owners/product/ue850-series-u28e850r/&quot;&gt;SAMSUNG LU28E85KRS&lt;/a&gt;, this makes impossible to select all supported modes for our screen, showing some default ones, without including resolutions greater than 1920x1080.&lt;/p&gt;&lt;h2 id=&quot;how-to-get-the-correct-edid-and-set-it-using-xrandr&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#how-to-get-the-correct-edid-and-set-it-using-xrandr&quot; aria-label=&quot;how to get the correct edid and set it using xrandr permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How to get the correct EDID and set it using xrandr&lt;/h2&gt;&lt;h3 id=&quot;getting-the-correct-edid&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#getting-the-correct-edid&quot; aria-label=&quot;getting the correct edid permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Getting the correct EDID&lt;/h3&gt;&lt;p&gt;Thanks to this wonderful answer &lt;a href=&quot;https://unix.stackexchange.com/a/323121&quot;&gt;How to get EDID for a single monitor?&lt;/a&gt; by &lt;a href=&quot;https://unix.stackexchange.com/users/32896/malat&quot;&gt;Malat&lt;/a&gt;, obtaining the correct information is easy.&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;hljs language-bash&quot;&gt;sudo apt install read-edid
sudo get-edid | parse-edid&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Cool, we get all supported modes.&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;hljs language-bash&quot;&gt;Modeline    &lt;span class=&quot;hljs-string&quot;&gt;&amp;quot;Mode 1&amp;quot;&lt;/span&gt; 148.500 1920 2008 2052 2200 1080 1084 1089 1125 +hsync +vsync
Modeline    &lt;span class=&quot;hljs-string&quot;&gt;&amp;quot;Mode 0&amp;quot;&lt;/span&gt; 297.00 3840 4016 4104 4400 2160 2168 2178 2250 +hsync +vsync 
Modeline    &lt;span class=&quot;hljs-string&quot;&gt;&amp;quot;Mode 2&amp;quot;&lt;/span&gt; 74.250 1280 1390 1420 1650 720 725 730 750 +hsync +vsync
Modeline    &lt;span class=&quot;hljs-string&quot;&gt;&amp;quot;Mode 3&amp;quot;&lt;/span&gt; 148.500 1920 2448 2492 2640 1080 1084 1089 1125 +hsync +vsync
Modeline    &lt;span class=&quot;hljs-string&quot;&gt;&amp;quot;Mode 4&amp;quot;&lt;/span&gt; 74.250 1280 1720 1760 1980 720 725 730 750 +hsync +vsync
Modeline    &lt;span class=&quot;hljs-string&quot;&gt;&amp;quot;Mode 5&amp;quot;&lt;/span&gt; 27.027 720 736 798 858 480 489 495 525 -hsync -vsync
Modeline    &lt;span class=&quot;hljs-string&quot;&gt;&amp;quot;Mode 6&amp;quot;&lt;/span&gt; 27.000 720 732 796 864 576 581 586 625 -hsync -vsync
Modeline    &lt;span class=&quot;hljs-string&quot;&gt;&amp;quot;Mode 7&amp;quot;&lt;/span&gt; 74.250 1920 2558 2602 2750 1080 1084 1089 1125 +hsync +vsync
Modeline    &lt;span class=&quot;hljs-string&quot;&gt;&amp;quot;Mode 8&amp;quot;&lt;/span&gt; 74.250 1920 2008 2052 2200 1080 1084 1089 1125 +hsync +vsync
Modeline    &lt;span class=&quot;hljs-string&quot;&gt;&amp;quot;Mode 9&amp;quot;&lt;/span&gt; 148.50 1920 2008 2052 2200 1080 1084 1089 1125 +hsync +vsync 
Modeline    &lt;span class=&quot;hljs-string&quot;&gt;&amp;quot;Mode 10&amp;quot;&lt;/span&gt; 148.50 1920 2448 2492 2640 1080 1084 1089 1125 +hsync +vsync 
Modeline    &lt;span class=&quot;hljs-string&quot;&gt;&amp;quot;Mode 11&amp;quot;&lt;/span&gt; 74.25 1280 1390 1430 1650 720 725 730 750 +hsync +vsync 
Modeline    &lt;span class=&quot;hljs-string&quot;&gt;&amp;quot;Mode 12&amp;quot;&lt;/span&gt; 241.50 2560 2608 2640 2720 1440 1443 1448 1481 +hsync -vsync &lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&quot;adding-the-new-modes-with-xrandr&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#adding-the-new-modes-with-xrandr&quot; aria-label=&quot;adding the new modes with xrandr permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Adding the new modes with xrandr&lt;/h3&gt;&lt;p&gt;The first value after the mode number tell us the horizontal resolution, in my case I’m interested in &lt;code&gt;Mode 0&lt;/code&gt;.&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;hljs language-bash&quot;&gt;Modeline    &lt;span class=&quot;hljs-string&quot;&gt;&amp;quot;Mode 0&amp;quot;&lt;/span&gt; 297.00 3840 4016 4104 4400 2160 2168 2178 2250 +hsync +vsync &lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Let’s create a new mode, we can name it anything we want but I prefer to name if after the output resolution.&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;hljs language-bash&quot;&gt;xrandr --newmode &lt;span class=&quot;hljs-string&quot;&gt;&amp;quot;3840x2160&amp;quot;&lt;/span&gt; 297.00 3840 4016 4104 4400 2160 2168 2178 2250 +hsync +&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Now we add the mode to the outut, if you are not sure which one is the output, run &lt;code&gt;xrandr&lt;/code&gt; and it will show something like &lt;code&gt;HDMI-2 connected&lt;/code&gt;.&lt;/p&gt;&lt;p&gt;We use the name of the output.&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;hljs language-bash&quot;&gt;xrandr --addmode HDMI-2 3840x2160&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;🎉 Now the new resolution should be available in the Display settings.&lt;/p&gt;&lt;p&gt;Don’t forget to set font DPI and screen scale to you taste.&lt;/p&gt;&lt;h2 id=&quot;useful-information&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#useful-information&quot; aria-label=&quot;useful information permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Useful information&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://wiki.archlinux.org/index.php/Xrandr&quot;&gt;Arch wiki xrandr&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://gist.github.com/datagrok/410d26e24ec51159cdfd2a400b809705&quot;&gt;Automate setting the screen&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</content:encoded></item><item><title><![CDATA[Crawling data from dynamically generated sites]]></title><description><![CDATA[Let's start with the need, why I had the necessity to do this,
Recently I created this  Corona Virus Map , I wanted to be the fastest…]]></description><link>https://odyssey.codes/blog/crawling-data-from-dynamically-generated sites/</link><guid isPermaLink="false">https://odyssey.codes/blog/crawling-data-from-dynamically-generated sites/</guid><pubDate>Fri, 14 Feb 2020 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;Let’s start with the need, why I had the necessity to do this,
Recently I created this &lt;a href=&quot;https://observablehq.com/@dobladov/coronavirus-2019-ncov&quot;&gt;Corona Virus Map&lt;/a&gt;, I wanted to be the fastest getting the data from the source site in Chinese, most of the other sites get the data periodical using a cron task and dumping their data locally.&lt;/p&gt;&lt;p&gt;In my case I wanted to get their data every time the map is loaded, ensuring more accurate results and completely avoiding any manual update of data.&lt;/p&gt;&lt;h2 id=&quot;parsing-the-site&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#parsing-the-site&quot; aria-label=&quot;parsing the site permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Parsing the site&lt;/h2&gt;&lt;p&gt;So my first try was to curl the page and sadly the results for this &lt;a href=&quot;https://ncov.dxy.cn/ncovh5/view/pneumonia&quot;&gt;site&lt;/a&gt; will not load unless you use Javascript since the tables are dynamically generated.&lt;/p&gt;&lt;p&gt;This leave us with not many options but to use a browser, so in my case I decided to use Puppeteer, a headless Chrome browser to get the data.&lt;/p&gt;&lt;p&gt;So after a while playing with it I got the code to do it, it will download and log the data in the format that I need.&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;hljs language-Javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; fs = &lt;span class=&quot;hljs-built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&amp;#x27;fs&amp;#x27;&lt;/span&gt;)
&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; puppeteer = &lt;span class=&quot;hljs-built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&amp;#x27;puppeteer&amp;#x27;&lt;/span&gt;);

(&lt;span class=&quot;hljs-keyword&quot;&gt;async&lt;/span&gt; () =&amp;gt; {
  &lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; browser = &lt;span class=&quot;hljs-keyword&quot;&gt;await&lt;/span&gt; puppeteer.launch()
  &lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; page = &lt;span class=&quot;hljs-keyword&quot;&gt;await&lt;/span&gt; browser.newPage()
  &lt;span class=&quot;hljs-keyword&quot;&gt;await&lt;/span&gt; page.goto(&lt;span class=&quot;hljs-string&quot;&gt;&amp;#x27;https://ncov.dxy.cn/ncovh5/view/pneumonia&amp;#x27;&lt;/span&gt;)
  &lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; data = &lt;span class=&quot;hljs-keyword&quot;&gt;await&lt;/span&gt; page.evaluate(&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-params&quot;&gt;body&lt;/span&gt; =&amp;gt;&lt;/span&gt; {
    [...document.querySelectorAll(&lt;span class=&quot;hljs-string&quot;&gt;&amp;quot;.close___2yTiY:not(.open___3it7L)&amp;quot;&lt;/span&gt;)].forEach(&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-params&quot;&gt;e&lt;/span&gt; =&amp;gt;&lt;/span&gt; e.click())
    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; [...document.querySelectorAll(&lt;span class=&quot;hljs-string&quot;&gt;&amp;#x27;.areaBox___3jZkr&amp;#x27;&lt;/span&gt;)[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;].querySelectorAll(&lt;span class=&quot;hljs-string&quot;&gt;&amp;#x27;.areaBlock2___27vn7&amp;#x27;&lt;/span&gt;)].map(&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-params&quot;&gt;row&lt;/span&gt; =&amp;gt;&lt;/span&gt; {
      &lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; [area, ,confirmed, dead, cured] = [...row.querySelectorAll(&lt;span class=&quot;hljs-string&quot;&gt;&amp;#x27;p&amp;#x27;&lt;/span&gt;)]
      &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; {
        &lt;span class=&quot;hljs-attr&quot;&gt;area&lt;/span&gt;: area.innerText,
        &lt;span class=&quot;hljs-attr&quot;&gt;confirmed&lt;/span&gt;: +confirmed.innerText || &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;,
        &lt;span class=&quot;hljs-attr&quot;&gt;dead&lt;/span&gt;: +dead.innerText || &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;,
        &lt;span class=&quot;hljs-attr&quot;&gt;cured&lt;/span&gt;: +cured.innerText || &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;
      }
    })
  })
  &lt;span class=&quot;hljs-built_in&quot;&gt;console&lt;/span&gt;.log(data)
  fs.writeFileSync(&lt;span class=&quot;hljs-string&quot;&gt;`2020-02-16T21:21:26.466Z.json`&lt;/span&gt;, &lt;span class=&quot;hljs-built_in&quot;&gt;JSON&lt;/span&gt;.stringify(data, &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;))
  &lt;span class=&quot;hljs-keyword&quot;&gt;await&lt;/span&gt; browser.close()
})()&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;After launching this script with &lt;code&gt;node crawler.js&lt;/code&gt; I get a file that I can use as the source data of my visualization.&lt;/p&gt;&lt;p&gt;All fine but now I have another need, how to get this data every time I load the map?&lt;/p&gt;&lt;p&gt;For this I definitely need a server running but for this case I wanted to see what can I do with free services.&lt;/p&gt;&lt;h2 id=&quot;using-glitch&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#using-glitch&quot; aria-label=&quot;using glitch permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Using Glitch&lt;/h2&gt;&lt;p&gt;My first approach was to use &lt;a href=&quot;glitch.com&quot;&gt;Glitch&lt;/a&gt;, after setting a express server and a few tries later I got my data every time I curl this url: &lt;a href=&quot;https://coronacrawler.glitch.me&quot;&gt;https://coronacrawler.glitch.me&lt;/a&gt;&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; express = &lt;span class=&quot;hljs-built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&amp;quot;express&amp;quot;&lt;/span&gt;)
&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; app = express()
&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; puppeteer = &lt;span class=&quot;hljs-built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&amp;#x27;puppeteer&amp;#x27;&lt;/span&gt;)

app.use(express.static(&lt;span class=&quot;hljs-string&quot;&gt;&amp;quot;public&amp;quot;&lt;/span&gt;))

app.get(&lt;span class=&quot;hljs-string&quot;&gt;&amp;quot;/&amp;quot;&lt;/span&gt;, &lt;span class=&quot;hljs-keyword&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;request, response&lt;/span&gt;) &lt;/span&gt;{
  &lt;span class=&quot;hljs-keyword&quot;&gt;try&lt;/span&gt; {
    &lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; browser = &lt;span class=&quot;hljs-keyword&quot;&gt;await&lt;/span&gt; puppeteer.launch({
      &lt;span class=&quot;hljs-attr&quot;&gt;args&lt;/span&gt;: [&lt;span class=&quot;hljs-string&quot;&gt;&amp;#x27;--no-sandbox&amp;#x27;&lt;/span&gt;]
    });

    &lt;span class=&quot;hljs-comment&quot;&gt;// Same code to get the data before&lt;/span&gt;

    res.json(data)
  } &lt;span class=&quot;hljs-keyword&quot;&gt;catch&lt;/span&gt; (error) {
    &lt;span class=&quot;hljs-built_in&quot;&gt;console&lt;/span&gt;.log(error)
  }
});

&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; listener = app.listen(process.env.PORT, &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{
  &lt;span class=&quot;hljs-built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;hljs-string&quot;&gt;&amp;quot;Your app is listening on port &amp;quot;&lt;/span&gt; + listener.address().port)
})&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Cool, but this creates another problem.&lt;/p&gt;&lt;h3 id=&quot;cross-origin&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#cross-origin&quot; aria-label=&quot;cross origin permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Cross-origin&lt;/h3&gt;&lt;p&gt;The map running in ObservableHQ needs to crawl this data and unfortunately if you curl a different domain from a website it needs to have Cross-origin headers enabled or for security reasons it will not load, after adding this to our express server it works.&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;app.use(&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;req, res, next&lt;/span&gt;) &lt;/span&gt;{
  res.header(&lt;span class=&quot;hljs-string&quot;&gt;&amp;quot;Access-Control-Allow-Origin&amp;quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&amp;quot;*&amp;quot;&lt;/span&gt;)
  res.header(&lt;span class=&quot;hljs-string&quot;&gt;&amp;quot;Access-Control-Allow-Headers&amp;quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&amp;quot;Origin, X-Requested-With, Content-Type, Accept&amp;quot;&lt;/span&gt;)
  next()
})&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&quot;alternative-to-cross-origin&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#alternative-to-cross-origin&quot; aria-label=&quot;alternative to cross origin permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Alternative to Cross-origin&lt;/h4&gt;&lt;p&gt;Another solution if adding the headers is impossible (For example in a server we can’t control), we can use a service like &lt;a href=&quot;https://cors-anywhere.herokuapp.com/&quot;&gt;cors-anywhere&lt;/a&gt;, just changing the URL to be:&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;hljs language-bash&quot;&gt;https://cors-anywhere.herokuapp.com/https://coronacrawler.glitch.me&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&quot;problems-with-glitch&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#problems-with-glitch&quot; aria-label=&quot;problems with glitch permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Problems with Glitch&lt;/h4&gt;&lt;p&gt;Nice, now I have a server running and I can query the data, what else can I ask for? Well while this works there are two main problems, Glitch is more of a place for playing with code and experimenting so it will not be fast.&lt;/p&gt;&lt;p&gt;Glitch servers go to sleep, it’s perfectly understandable, it makes no sense for Glitch to give computing power for free running all the time, after some period of inactivity the machine will go to sleep and it needs to be awaken the next time, this makes the map unresponsive if there are not many queries and it gives the sensation of being more slow than it is.&lt;/p&gt;&lt;p&gt;At this point I moved to zeit.co&lt;/p&gt;&lt;h2 id=&quot;using-zeitco&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#using-zeitco&quot; aria-label=&quot;using zeitco permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Using Zeit.co&lt;/h2&gt;&lt;p&gt;Why use zeit.co when Glitch is working?&lt;/p&gt;&lt;p&gt;This service offers quite a nice free “Hobby” service allowing to use serverless functions.&lt;/p&gt;&lt;h3 id=&quot;creating-a-serverless-function&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#creating-a-serverless-function&quot; aria-label=&quot;creating a serverless function permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Creating a serverless function&lt;/h3&gt;&lt;p&gt;We need to modify the previous script a little since we have other constrains.&lt;/p&gt;&lt;p&gt;First we need a start point for the api query in this case we need a file in &lt;code&gt;/api/index.js&lt;/code&gt;&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; getData = &lt;span class=&quot;hljs-built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&amp;#x27;./getData&amp;#x27;&lt;/span&gt;)

&lt;span class=&quot;hljs-built_in&quot;&gt;module&lt;/span&gt;.exports = &lt;span class=&quot;hljs-keyword&quot;&gt;async&lt;/span&gt; (req, res) =&amp;gt; {
  &lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; data = &lt;span class=&quot;hljs-keyword&quot;&gt;await&lt;/span&gt; getData()
  res.json(data)
}&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;The first problem I encountered is that using puppeteer is a little bit different, luckily this guide &lt;a href=&quot;https://zeit.co/blog/serverless-chrome&quot;&gt;Serverless Chrome via Puppeteer with Now 2.0&lt;/a&gt; explains how to do it well.&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; chrome = &lt;span class=&quot;hljs-built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&amp;#x27;chrome-aws-lambda&amp;#x27;&lt;/span&gt;)
&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; puppeteer = &lt;span class=&quot;hljs-built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&amp;#x27;puppeteer-core&amp;#x27;&lt;/span&gt;)

&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; getData = &lt;span class=&quot;hljs-keyword&quot;&gt;async&lt;/span&gt; () =&amp;gt; {
  &lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; browser = &lt;span class=&quot;hljs-keyword&quot;&gt;await&lt;/span&gt; puppeteer.launch({
    &lt;span class=&quot;hljs-attr&quot;&gt;args&lt;/span&gt;: chrome.args,
    &lt;span class=&quot;hljs-attr&quot;&gt;executablePath&lt;/span&gt;: &lt;span class=&quot;hljs-keyword&quot;&gt;await&lt;/span&gt; chrome.executablePath,
    &lt;span class=&quot;hljs-attr&quot;&gt;headless&lt;/span&gt;: chrome.headless,
  })

  &lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; page = &lt;span class=&quot;hljs-keyword&quot;&gt;await&lt;/span&gt; browser.newPage()
  &lt;span class=&quot;hljs-keyword&quot;&gt;await&lt;/span&gt; page.goto(&lt;span class=&quot;hljs-string&quot;&gt;&amp;#x27;https://ncov.dxy.cn/ncovh5/view/pneumonia&amp;#x27;&lt;/span&gt;)

&lt;span class=&quot;hljs-comment&quot;&gt;// Same code to get the data before&lt;/span&gt;

  &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; data
}

&lt;span class=&quot;hljs-built_in&quot;&gt;module&lt;/span&gt;.exports = getData&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&quot;supporting-cross-origin&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#supporting-cross-origin&quot; aria-label=&quot;supporting cross origin permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Supporting Cross-origin&lt;/h4&gt;&lt;p&gt;To enable cors we need a file &lt;code&gt;/api/200.js&lt;/code&gt;&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;module&lt;/span&gt;.exports = &lt;span class=&quot;hljs-keyword&quot;&gt;async&lt;/span&gt; (req, res) =&amp;gt; {
  res.status(&lt;span class=&quot;hljs-number&quot;&gt;200&lt;/span&gt;).send({ &lt;span class=&quot;hljs-attr&quot;&gt;message&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&amp;#x27;cors ok&amp;#x27;&lt;/span&gt; });
}&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Also our &lt;code&gt;now.js&lt;/code&gt; file should look like this.&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;hljs language-javascript&quot;&gt;{
  &lt;span class=&quot;hljs-string&quot;&gt;&amp;quot;version&amp;quot;&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;,
  &lt;span class=&quot;hljs-string&quot;&gt;&amp;quot;routes&amp;quot;&lt;/span&gt;: [
    {
      &lt;span class=&quot;hljs-string&quot;&gt;&amp;quot;src&amp;quot;&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&amp;quot;/(.*)&amp;quot;&lt;/span&gt;,
      &lt;span class=&quot;hljs-string&quot;&gt;&amp;quot;dest&amp;quot;&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&amp;quot;/api/index.js&amp;quot;&lt;/span&gt;,
      &lt;span class=&quot;hljs-string&quot;&gt;&amp;quot;headers&amp;quot;&lt;/span&gt;: {
        &lt;span class=&quot;hljs-string&quot;&gt;&amp;quot;Access-Control-Allow-Origin&amp;quot;&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&amp;quot;*&amp;quot;&lt;/span&gt;,
        &lt;span class=&quot;hljs-string&quot;&gt;&amp;quot;Access-Control-Allow-Methods&amp;quot;&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&amp;quot;OPTIONS&amp;quot;&lt;/span&gt;,
        &lt;span class=&quot;hljs-string&quot;&gt;&amp;quot;Access-Control-Allow-Headers&amp;quot;&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&amp;quot;Origin, X-Requested-With, Content-Type, Accept, Authorization&amp;quot;&lt;/span&gt;
      }
    }
  ]
}&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;After this using the command &lt;code&gt;now&lt;/code&gt; should upload the project to zeit.co and the data is available on the project url &lt;a href=&quot;https://cvirus.dobladov.now.sh/&quot;&gt;https://cvirus.dobladov.now.sh/&lt;/a&gt;&lt;/p&gt;&lt;h2 id=&quot;notes&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#notes&quot; aria-label=&quot;notes permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Notes&lt;/h2&gt;&lt;p&gt;As an alternative to Glitch and Zeit we can use &lt;a href=&quot;https://docs.netlify.com/functions/overview/#manage-your-serverless-functions&quot;&gt;Netlify&lt;/a&gt;, but for this project it was not necessary.&lt;/p&gt;&lt;p&gt;I’m not affiliated to Glitch of Zeit.co in any way, I just think both are really nice services to run my apps.&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Automatically deploy to GitHub Pages using Actions]]></title><description><![CDATA[This has become the main way to deploy most of my projects and it has greatly reduced the time invested doing it by hand, also avoiding…]]></description><link>https://odyssey.codes/blog/automatically-deploy-to-GitHub-Pages-using-Actions/</link><guid isPermaLink="false">https://odyssey.codes/blog/automatically-deploy-to-GitHub-Pages-using-Actions/</guid><pubDate>Fri, 07 Feb 2020 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;This has become the main way to deploy most of my projects and it has greatly reduced the time invested doing it by hand, also avoiding headaches that you might be familiar with like, “ohhh! I forgot to checkout the proper branch”, “I used the wrong script.”, “I accidentally deleted the database and all the backups while updating a CSS color”.&lt;/p&gt;&lt;p&gt;After setting up this workflow your code will be automatically deployed after each commit to master without human interaction and without having to use other service than GitHub.&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;“There should be two tasks for a human being to perform to deploy software into a development, test, or production environment: to pick the version and environment and to press the “deploy” button.”
― David Farley, Continuous Delivery: Reliable Software Releases through Build, Test, and Deployment Automation&lt;/p&gt;&lt;/blockquote&gt;&lt;h2 id=&quot;advantages&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#advantages&quot; aria-label=&quot;advantages permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Advantages&lt;/h2&gt;&lt;p&gt;If just mentioning the world &lt;em&gt;“Automatically”&lt;/em&gt; does not catch your attention, these are some of the main reasons why is worth to write some tiny workflows.&lt;/p&gt;&lt;h3 id=&quot;single-source-of-truth&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#single-source-of-truth&quot; aria-label=&quot;single source of truth permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Single source of truth&lt;/h3&gt;&lt;p&gt;Your code and and scrips for deployment are on same repository ensuring that all the information to create a build is on the repository and no manual process or tool is missing.&lt;/p&gt;&lt;h3 id=&quot;documentation-of-deployments&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#documentation-of-deployments&quot; aria-label=&quot;documentation of deployments permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Documentation of deployments&lt;/h3&gt;&lt;p&gt;The &lt;code&gt;.yml&lt;/code&gt; workflow shows how to do a proper deployment, other developers should know how it can be replicated locally; Even if there are no comments it might be easy to reverse engineer this files.&lt;/p&gt;&lt;h3 id=&quot;automated-testing&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#automated-testing&quot; aria-label=&quot;automated testing permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Automated testing&lt;/h3&gt;&lt;p&gt;Before each build tests can be enforce to avoid putting code on production that might contain errors or not follow the code style guide.&lt;/p&gt;&lt;h3 id=&quot;no-more-manual-tasks&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#no-more-manual-tasks&quot; aria-label=&quot;no more manual tasks permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;No more manual tasks&lt;/h3&gt;&lt;p&gt;This is clear, automating a process is always faster and in general less error prone than putting your code manually in production on a Friday before vacations 🎉.&lt;/p&gt;&lt;h3 id=&quot;multi-platform&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#multi-platform&quot; aria-label=&quot;multi platform permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Multi-platform&lt;/h3&gt;&lt;p&gt;Multiple platforms can be tested while doing the deployment without the need of the developers of installing virtual machines.&lt;/p&gt;&lt;h3 id=&quot;cost&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#cost&quot; aria-label=&quot;cost permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Cost&lt;/h3&gt;&lt;p&gt;Manual deployment will cost you at the very least time ⌚, GitHub actions are for free both in price and your time, why not use them?&lt;/p&gt;&lt;h2 id=&quot;creating-a-new-action&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#creating-a-new-action&quot; aria-label=&quot;creating a new action permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Creating a new Action&lt;/h2&gt;&lt;p&gt;Choose a repository, go to Actions and add new one.&lt;/p&gt;&lt;p&gt;We need to create a new file, in this case is called &lt;code&gt;deploy.yml&lt;/code&gt;, here we will define the process for the deployment, make sure to &lt;strong&gt;never put any secrets in here&lt;/strong&gt; since it will be committed to the repository.&lt;/p&gt;&lt;p&gt;The structure goes this way, we need a &lt;code&gt;name&lt;/code&gt;, &lt;code&gt;on&lt;/code&gt; which circumstances we need to run this action, and which &lt;code&gt;jobs&lt;/code&gt; the action will execute.&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;hljs language-yml&quot;&gt;&lt;span class=&quot;hljs-attr&quot;&gt;name:&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;Deploy&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;GitHub&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;Pages&lt;/span&gt;

&lt;span class=&quot;hljs-attr&quot;&gt;on:&lt;/span&gt;
  &lt;span class=&quot;hljs-attr&quot;&gt;push:&lt;/span&gt;
    &lt;span class=&quot;hljs-attr&quot;&gt;branches:&lt;/span&gt;
      &lt;span class=&quot;hljs-bullet&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;master&lt;/span&gt;

&lt;span class=&quot;hljs-attr&quot;&gt;jobs:&lt;/span&gt;
  &lt;span class=&quot;hljs-attr&quot;&gt;build-and-deploy:&lt;/span&gt;
    &lt;span class=&quot;hljs-attr&quot;&gt;runs-on:&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;ubuntu-latest&lt;/span&gt;

    &lt;span class=&quot;hljs-attr&quot;&gt;steps:&lt;/span&gt;
    &lt;span class=&quot;hljs-bullet&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;name:&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;Checkout&lt;/span&gt;
      &lt;span class=&quot;hljs-attr&quot;&gt;uses:&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;actions/checkout@v2&lt;/span&gt;

    &lt;span class=&quot;hljs-bullet&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;name:&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;Build&lt;/span&gt;
      &lt;span class=&quot;hljs-attr&quot;&gt;uses:&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;actions/setup-node@v1&lt;/span&gt;
      &lt;span class=&quot;hljs-attr&quot;&gt;with:&lt;/span&gt;
        &lt;span class=&quot;hljs-attr&quot;&gt;node-version:&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&amp;#x27;13.x&amp;#x27;&lt;/span&gt;
    &lt;span class=&quot;hljs-bullet&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;run:&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;|
        npm install
        npm test
        npm run build
        touch dist/.nojekyll
        echo &amp;quot;snoo.odyssey.codes&amp;quot; &amp;gt; dist/CNAME
&lt;/span&gt;    &lt;span class=&quot;hljs-bullet&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;name:&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;Deploy&lt;/span&gt;
      &lt;span class=&quot;hljs-attr&quot;&gt;uses:&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;JamesIves/github-pages-deploy-action@releases/v3&lt;/span&gt;
      &lt;span class=&quot;hljs-attr&quot;&gt;with:&lt;/span&gt;
        &lt;span class=&quot;hljs-attr&quot;&gt;GITHUB_TOKEN:&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;${{&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;secrets.GITHUB_TOKEN&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;}}&lt;/span&gt;
        &lt;span class=&quot;hljs-attr&quot;&gt;BRANCH:&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;gh-pages&lt;/span&gt;
        &lt;span class=&quot;hljs-attr&quot;&gt;FOLDER:&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;dist&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;After saving this new workflow we should have a file called &lt;code&gt;deploy.yml&lt;/code&gt; inside &lt;code&gt;.github/workflows&lt;/code&gt;.&lt;/p&gt;&lt;p&gt;Immediately a new action will be triggered executing the workflow, making a new build and pushing it to the &lt;code&gt;gh-pages&lt;/code&gt; branch.&lt;/p&gt;&lt;p&gt;After is finish our app should be available at the repository public URL, the URL is show in Setting -&amp;gt; GitHub Pages, here you can also set a custom one.&lt;/p&gt;&lt;h3 id=&quot;functionality-of-each-block&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#functionality-of-each-block&quot; aria-label=&quot;functionality of each block permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Functionality of each block&lt;/h3&gt;&lt;p&gt;Let’s go trough each part of the code.&lt;/p&gt;&lt;p&gt;Here we are indicating push code to master should trigger this Action.&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;hljs language-yml&quot;&gt;&lt;span class=&quot;hljs-attr&quot;&gt;on:&lt;/span&gt;
  &lt;span class=&quot;hljs-attr&quot;&gt;push:&lt;/span&gt;
    &lt;span class=&quot;hljs-attr&quot;&gt;branches:&lt;/span&gt;
      &lt;span class=&quot;hljs-bullet&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;master&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Inside of jobs we have to define the machine that will run the code, in this case Ubuntu.&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;hljs language-yml&quot;&gt;&lt;span class=&quot;hljs-attr&quot;&gt;build-and-deploy:&lt;/span&gt;
	&lt;span class=&quot;hljs-attr&quot;&gt;runs-on:&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;ubuntu-latest&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&quot;steps-of-the-job&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#steps-of-the-job&quot; aria-label=&quot;steps of the job permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Steps of the job&lt;/h4&gt;&lt;p&gt;The Action is now divided in different &lt;code&gt;steps&lt;/code&gt; that will be executed sequentially.&lt;/p&gt;&lt;p&gt;This step will checkout your repository to make the code available.&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;hljs language-yml&quot;&gt;&lt;span class=&quot;hljs-bullet&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;name:&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;Checkout&lt;/span&gt;
  &lt;span class=&quot;hljs-attr&quot;&gt;uses:&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;actions/checkout@v2&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Now we set node.js and we use version 13 to run the code, I would recommend to read the docs to do some other interesting stuff like running multiple node versions.&lt;/p&gt;&lt;p&gt;This step will be similar for other code like go or rust&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;hljs language-yml&quot;&gt;&lt;span class=&quot;hljs-bullet&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;name:&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;Build&lt;/span&gt;
  &lt;span class=&quot;hljs-attr&quot;&gt;uses:&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;actions/setup-node@v1&lt;/span&gt;
  &lt;span class=&quot;hljs-attr&quot;&gt;with:&lt;/span&gt;
    &lt;span class=&quot;hljs-attr&quot;&gt;node-version:&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&amp;#x27;13.x&amp;#x27;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;The interesting part, here we have to define the process of actually building the site in this case something similar to what we would execute on our local machine to do it.&lt;/p&gt;&lt;p&gt;In this case I install the missing node packages, test the code and compile the site.&lt;/p&gt;&lt;p&gt;After this I added some special stuff for this repository, for example I make sure to create a file indicating that is not a Jekyll repository but this is actually not required in most cases.&lt;/p&gt;&lt;p&gt;After that I define the CNAME since I want this code to run on a custom domain instead of &lt;code&gt;user.github.io/repository&lt;/code&gt;&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;hljs language-yml&quot;&gt;&lt;span class=&quot;hljs-bullet&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;run:&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;|
  npm install
  npm test
  npm run build
  touch dist/.nojekyll
  echo &amp;quot;snoo.odyssey.codes&amp;quot; &amp;gt; dist/CNAME&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;With this last step we push the code to the &lt;code&gt;gh-pages&lt;/code&gt; branch of the repository&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;hljs language-yml&quot;&gt;&lt;span class=&quot;hljs-bullet&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;name:&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;Deploy&lt;/span&gt;
      &lt;span class=&quot;hljs-attr&quot;&gt;uses:&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;JamesIves/github-pages-deploy-action@releases/v3&lt;/span&gt;
      &lt;span class=&quot;hljs-attr&quot;&gt;with:&lt;/span&gt;
        &lt;span class=&quot;hljs-attr&quot;&gt;GITHUB_TOKEN:&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;${{&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;secrets.GITHUB_TOKEN&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;}}&lt;/span&gt;
        &lt;span class=&quot;hljs-attr&quot;&gt;BRANCH:&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;gh-pages&lt;/span&gt;
        &lt;span class=&quot;hljs-attr&quot;&gt;FOLDER:&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;dist&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;If any of this steps fails the process will stop ensuring no “bad build” will be out on production.&lt;/p&gt;&lt;h2 id=&quot;more-about-it&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#more-about-it&quot; aria-label=&quot;more about it permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;More about it&lt;/h2&gt;&lt;h3 id=&quot;committing-the-build-to-a-different-repository&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#committing-the-build-to-a-different-repository&quot; aria-label=&quot;committing the build to a different repository permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Committing the build to a different repository&lt;/h3&gt;&lt;p&gt;I had the use case of having to push the build to a different repository from the one where the sources are.&lt;/p&gt;&lt;p&gt;In this case I wanted to have the code of my blog on a repository and deploy this build to a GitHubs’s special repository named name.github.io, to serve my personal page from here since ‘gh-pages’ does not work for this repository and my blog does not use Jekyll meaning the source code has to be on a separated repository and the build on master.&lt;/p&gt;&lt;p&gt;To create this token go to &lt;code&gt;Settings&lt;/code&gt; -&amp;gt; &lt;code&gt;Developer settings&lt;/code&gt; -&amp;gt; &lt;code&gt;Personal access tokens&lt;/code&gt; and create a new one.&lt;/p&gt;&lt;p&gt;With this configuration, we can use a personal token that needs to be set on Settings -&amp;gt; Secrets, since the &lt;code&gt;secrets.GITHUB_TOKEN&lt;/code&gt; only allows you to commit to your current repository.&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;hljs language-yml&quot;&gt;&lt;span class=&quot;hljs-bullet&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;name:&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;Deploy&lt;/span&gt;
      &lt;span class=&quot;hljs-attr&quot;&gt;uses:&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;peaceiris/actions-gh-pages@v2&lt;/span&gt;
      &lt;span class=&quot;hljs-attr&quot;&gt;env:&lt;/span&gt;
        &lt;span class=&quot;hljs-attr&quot;&gt;PERSONAL_TOKEN:&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;${{&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;secrets.PERSONAL_TOKEN&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;}}&lt;/span&gt;
        &lt;span class=&quot;hljs-attr&quot;&gt;EXTERNAL_REPOSITORY:&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;dobladov/dobladov.github.io&lt;/span&gt;
        &lt;span class=&quot;hljs-attr&quot;&gt;PUBLISH_BRANCH:&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;master&lt;/span&gt;
        &lt;span class=&quot;hljs-attr&quot;&gt;PUBLISH_DIR:&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;./public&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&quot;testing-multiple-platforms&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#testing-multiple-platforms&quot; aria-label=&quot;testing multiple platforms permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Testing multiple platforms&lt;/h3&gt;&lt;p&gt;Different platforms might use different commands.&lt;/p&gt;&lt;p&gt;For example let’s say there’s a &lt;code&gt;rm&lt;/code&gt; in the scripts of the package.js while this build should work on MacOS and Linux, unfortunately it will fail on Windows since the &lt;code&gt;rm&lt;/code&gt; command is not available, with a multiple platform test we will realize that using a solution like &lt;code&gt;rimraf&lt;/code&gt; instead of &lt;code&gt;rm&lt;/code&gt; will solve the problem for Windows.&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;hljs language-yml&quot;&gt;&lt;span class=&quot;hljs-attr&quot;&gt;strategy:&lt;/span&gt;
      &lt;span class=&quot;hljs-attr&quot;&gt;matrix:&lt;/span&gt;
        &lt;span class=&quot;hljs-attr&quot;&gt;platform:&lt;/span&gt; [&lt;span class=&quot;hljs-string&quot;&gt;ubuntu-latest&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;macos-latest&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;windows-latest&lt;/span&gt;]
    &lt;span class=&quot;hljs-attr&quot;&gt;runs-on:&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;${{&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;matrix.platform&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;}}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&quot;writing-a-cname-for-custom-domains&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#writing-a-cname-for-custom-domains&quot; aria-label=&quot;writing a cname for custom domains permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Writing a CNAME for custom domains&lt;/h3&gt;&lt;p&gt;If your deployments needs a custom domain don’t forget to write this file on each build.&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;hljs language-bash&quot;&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&amp;quot;snoo.odyssey.codes&amp;quot;&lt;/span&gt; &amp;gt; dist/CNAME&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&quot;running-actions-on-other-events&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#running-actions-on-other-events&quot; aria-label=&quot;running actions on other events permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Running actions on other events&lt;/h3&gt;&lt;p&gt;Actions are not limited to push to master, is possible to also execute test or do other task on pull request or any kind of supported action, also to schedule this tasks using cron.&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;hljs language-yml&quot;&gt;&lt;span class=&quot;hljs-attr&quot;&gt;on:&lt;/span&gt;
  &lt;span class=&quot;hljs-attr&quot;&gt;schedule:&lt;/span&gt;
    &lt;span class=&quot;hljs-bullet&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;hljs-attr&quot;&gt;cron:&lt;/span&gt;  &lt;span class=&quot;hljs-string&quot;&gt;&amp;#x27;0 * * * *&amp;#x27;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&quot;not-only-for-deployments&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#not-only-for-deployments&quot; aria-label=&quot;not only for deployments permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Not only for deployments&lt;/h3&gt;&lt;p&gt;Actions can be used for creating new release packages, also notifications, emails can be send on each event, the limit is your 🌈 imagination 🌈.&lt;/p&gt;&lt;h3 id=&quot;disadvantages&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#disadvantages&quot; aria-label=&quot;disadvantages permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Disadvantages&lt;/h3&gt;&lt;p&gt;One of the main disadvantages, is that like any other service if is down you will not be able of deploying using these workflows, It does not limit you to still do manual deployments for your application.&lt;/p&gt;&lt;p&gt;If you wonder why your perfectly working action does not work don’t forget to check: &lt;a href=&quot;https://status.github.com/&quot;&gt;https://status.github.com/&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Actions are not a 100% reliable if the infrastructure of GitHub fails, I had a problem where GitHub did not trigger one of my builds when I merged new code, a way to force a new commit without changes is to execute &lt;code&gt;git commit --allow-empty&lt;/code&gt;, this will cause the action to be executed.&lt;/p&gt;&lt;h2 id=&quot;documentation&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#documentation&quot; aria-label=&quot;documentation permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Documentation&lt;/h2&gt;&lt;p&gt;Documentation worth reading:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/actions/setup-node&quot;&gt;Node Action documentation&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/JamesIves/github-pages-deploy-action&quot;&gt;Deploy Action documentation&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://help.github.com/en/actions/automating-your-workflow-with-github-actions&quot;&gt;GitHub Actions documentation&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/actions/checkout&quot;&gt;Checkout Action documentation&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Some examples of my GitHub Actions:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/dobladov/snoo/blob/master/.github/workflows/deploy.yml&quot;&gt;Snoo&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/dobladov/last-time/blob/master/.github/workflows/deploy.yml&quot;&gt;Last-Time&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/dobladov/mdx-blog/blob/master/.github/workflows/deploy.yml&quot;&gt;This blog&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</content:encoded></item></channel></rss>