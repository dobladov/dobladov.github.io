<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Odyssey Codes RSS]]></title><description><![CDATA[I'm a Front-end Developer currently based in Berlin üá©üá™, with true passion for open-source and building better platforms.]]></description><link>http://github.com/dylang/node-rss</link><generator>GatsbyJS</generator><lastBuildDate>Mon, 10 Feb 2020 14:48:14 GMT</lastBuildDate><item><title><![CDATA[Automatically deploy to GitHub Pages using Actions]]></title><description><![CDATA[This has become the main way to deploy most of my projects and it has greatly reduced the time invested doing it by hand, also avoiding‚Ä¶]]></description><link>https://odyssey.codes/blog/automatically-deploy-to-GitHub-Pages-using-Actions/</link><guid isPermaLink="false">https://odyssey.codes/blog/automatically-deploy-to-GitHub-Pages-using-Actions/</guid><pubDate>Fri, 07 Feb 2020 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;This has become the main way to deploy most of my projects and it has greatly reduced the time invested doing it by hand, also avoiding headaches that you might be familiar with like, ‚Äúohhh! I forgot to checkout the proper branch‚Äù, ‚ÄúI used the wrong script.‚Äù, ‚ÄúI accidentally deleted the database and all the backups while updating a CSS color‚Äù.&lt;/p&gt;&lt;p&gt;After setting up this workflow your code will be automatically deployed after each commit to master without human interaction and without having to use other service than GitHub.&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;‚ÄúThere should be two tasks for a human being to perform to deploy software into a development, test, or production environment: to pick the version and environment and to press the ‚Äúdeploy‚Äù button.‚Äù
‚Äï David Farley, Continuous Delivery: Reliable Software Releases through Build, Test, and Deployment Automation&lt;/p&gt;&lt;/blockquote&gt;&lt;h2 id=&quot;advantages&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#advantages&quot; aria-label=&quot;advantages permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Advantages&lt;/h2&gt;&lt;p&gt;If just mentioning the world &lt;em&gt;‚ÄúAutomatically‚Äù&lt;/em&gt; does not catch your attention, these are some of the main reasons why is worth to write some tiny workflows.&lt;/p&gt;&lt;h3 id=&quot;single-source-of-truth&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#single-source-of-truth&quot; aria-label=&quot;single source of truth permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Single source of truth&lt;/h3&gt;&lt;p&gt;Your code and and scrips for deployment are on same repository ensuring that all the information to create a build is on the repository and no manual process or tool is missing.&lt;/p&gt;&lt;h3 id=&quot;documentation-of-deployments&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#documentation-of-deployments&quot; aria-label=&quot;documentation of deployments permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Documentation of deployments&lt;/h3&gt;&lt;p&gt;The &lt;code&gt;.yml&lt;/code&gt; workflow shows how to do a proper deployment, other developers should know how it can be replicated locally; Even if there are no comments it might be easy to reverse engineer this files.&lt;/p&gt;&lt;h3 id=&quot;automated-testing&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#automated-testing&quot; aria-label=&quot;automated testing permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Automated testing&lt;/h3&gt;&lt;p&gt;Before each build tests can be enforce to avoid putting code on production that might contain errors or not follow the code style guide.&lt;/p&gt;&lt;h3 id=&quot;no-more-manual-tasks&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#no-more-manual-tasks&quot; aria-label=&quot;no more manual tasks permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;No more manual tasks&lt;/h3&gt;&lt;p&gt;This is clear, automating a process is always faster and in general less error prone than putting your code manually in production on a Friday before vacations üéâ.&lt;/p&gt;&lt;h3 id=&quot;multi-platform&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#multi-platform&quot; aria-label=&quot;multi platform permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Multi-platform&lt;/h3&gt;&lt;p&gt;Multiple platforms can be tested while doing the deployment without the need of the developers of installing virtual machines.&lt;/p&gt;&lt;h3 id=&quot;cost&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#cost&quot; aria-label=&quot;cost permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Cost&lt;/h3&gt;&lt;p&gt;Manual deployment will cost you at the very least time ‚åö, GitHub actions are for free both in price and your time, why not use them?&lt;/p&gt;&lt;h2 id=&quot;creating-a-new-action&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#creating-a-new-action&quot; aria-label=&quot;creating a new action permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Creating a new Action&lt;/h2&gt;&lt;p&gt;Choose a repository, go to Actions and add new one.&lt;/p&gt;&lt;p&gt;We need to create a new file, in this case is called &lt;code&gt;deploy.yml&lt;/code&gt;, here we will define the process for the deployment, make sure to &lt;strong&gt;never put any secrets in here&lt;/strong&gt; since it will be committed to the repository.&lt;/p&gt;&lt;p&gt;The structure goes this way, we need a &lt;code&gt;name&lt;/code&gt;, &lt;code&gt;on&lt;/code&gt; which circumstances we need to run this action, and which &lt;code&gt;jobs&lt;/code&gt; the action will execute.&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;hljs language-yml&quot;&gt;&lt;span class=&quot;hljs-attr&quot;&gt;name:&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;Deploy&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;GitHub&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;Pages&lt;/span&gt;

&lt;span class=&quot;hljs-attr&quot;&gt;on:&lt;/span&gt;
&lt;span class=&quot;hljs-attr&quot;&gt;  push:&lt;/span&gt;
&lt;span class=&quot;hljs-attr&quot;&gt;    branches:&lt;/span&gt;
&lt;span class=&quot;hljs-bullet&quot;&gt;      -&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;master&lt;/span&gt;

&lt;span class=&quot;hljs-attr&quot;&gt;jobs:&lt;/span&gt;
&lt;span class=&quot;hljs-attr&quot;&gt;  build-and-deploy:&lt;/span&gt;
&lt;span class=&quot;hljs-attr&quot;&gt;    runs-on:&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;ubuntu-latest&lt;/span&gt;

&lt;span class=&quot;hljs-attr&quot;&gt;    steps:&lt;/span&gt;
&lt;span class=&quot;hljs-attr&quot;&gt;    - name:&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;Checkout&lt;/span&gt;
&lt;span class=&quot;hljs-attr&quot;&gt;      uses:&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;actions/checkout@v2&lt;/span&gt;

&lt;span class=&quot;hljs-attr&quot;&gt;    - name:&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;Build&lt;/span&gt;
&lt;span class=&quot;hljs-attr&quot;&gt;      uses:&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;actions/setup-node@v1&lt;/span&gt;
&lt;span class=&quot;hljs-attr&quot;&gt;      with:&lt;/span&gt;
&lt;span class=&quot;hljs-attr&quot;&gt;        node-version:&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&amp;#x27;13.x&amp;#x27;&lt;/span&gt;
&lt;span class=&quot;hljs-attr&quot;&gt;    - run:&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;|
        npm install
        npm test
        npm run build
        touch dist/.nojekyll
        echo &amp;quot;snoo.odyssey.codes&amp;quot; &amp;gt; dist/CNAME
&lt;/span&gt;&lt;span class=&quot;hljs-attr&quot;&gt;    - name:&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;Deploy&lt;/span&gt;
&lt;span class=&quot;hljs-attr&quot;&gt;      uses:&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;JamesIves/github-pages-deploy-action@releases/v3&lt;/span&gt;
&lt;span class=&quot;hljs-attr&quot;&gt;      with:&lt;/span&gt;
&lt;span class=&quot;hljs-attr&quot;&gt;        GITHUB_TOKEN:&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;${{&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;secrets.GITHUB_TOKEN&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;}}&lt;/span&gt;
&lt;span class=&quot;hljs-attr&quot;&gt;        BRANCH:&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;gh-pages&lt;/span&gt;
&lt;span class=&quot;hljs-attr&quot;&gt;        FOLDER:&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;dist&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;After saving this new workflow we should have a file called &lt;code&gt;deploy.yml&lt;/code&gt; inside &lt;code&gt;.github/workflows&lt;/code&gt;.&lt;/p&gt;&lt;p&gt;Immediately a new action will be triggered executing the workflow, making a new build and pushing it to the &lt;code&gt;gh-pages&lt;/code&gt; branch.&lt;/p&gt;&lt;p&gt;After is finish our app should be available at the repository public URL, the URL is show in Setting -&amp;gt; GitHub Pages, here you can also set a custom one.&lt;/p&gt;&lt;h3 id=&quot;functionality-of-each-block&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#functionality-of-each-block&quot; aria-label=&quot;functionality of each block permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Functionality of each block&lt;/h3&gt;&lt;p&gt;Let‚Äôs go trough each part of the code.&lt;/p&gt;&lt;p&gt;Here we are indicating push code to master should trigger this Action.&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;hljs language-yml&quot;&gt;&lt;span class=&quot;hljs-attr&quot;&gt;on:&lt;/span&gt;
&lt;span class=&quot;hljs-attr&quot;&gt;  push:&lt;/span&gt;
&lt;span class=&quot;hljs-attr&quot;&gt;    branches:&lt;/span&gt;
&lt;span class=&quot;hljs-bullet&quot;&gt;      -&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;master&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Inside of jobs we have to define the machine that will run the code, in this case Ubuntu.&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;hljs language-yml&quot;&gt;&lt;span class=&quot;hljs-attr&quot;&gt;build-and-deploy:&lt;/span&gt;
	&lt;span class=&quot;hljs-attr&quot;&gt;runs-on:&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;ubuntu-latest&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&quot;steps-of-the-job&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#steps-of-the-job&quot; aria-label=&quot;steps of the job permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Steps of the job&lt;/h4&gt;&lt;p&gt;The Action is now divided in different &lt;code&gt;steps&lt;/code&gt; that will be executed sequentially.&lt;/p&gt;&lt;p&gt;This step will checkout your repository to make the code available.&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;hljs language-yml&quot;&gt;&lt;span class=&quot;hljs-attr&quot;&gt;- name:&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;Checkout&lt;/span&gt;
&lt;span class=&quot;hljs-attr&quot;&gt;  uses:&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;actions/checkout@v2&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Now we set node.js and we use version 13 to run the code, I would recommend to read the docs to do some other interesting stuff like running multiple node versions.&lt;/p&gt;&lt;p&gt;This step will be similar for other code like go or rust&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;hljs language-yml&quot;&gt;&lt;span class=&quot;hljs-attr&quot;&gt;- name:&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;Build&lt;/span&gt;
&lt;span class=&quot;hljs-attr&quot;&gt;  uses:&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;actions/setup-node@v1&lt;/span&gt;
&lt;span class=&quot;hljs-attr&quot;&gt;  with:&lt;/span&gt;
&lt;span class=&quot;hljs-attr&quot;&gt;    node-version:&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&amp;#x27;13.x&amp;#x27;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;The interesting part, here we have to define the process of actually building the site in this case something similar to what we would execute on our local machine to do it.&lt;/p&gt;&lt;p&gt;In this case I install the missing node packages, test the code and compile the site.&lt;/p&gt;&lt;p&gt;After this I added some special stuff for this repository, for example I make sure to create a file indicating that is not a Jekyll repository but this is actually not required in most cases.&lt;/p&gt;&lt;p&gt;After that I define the CNAME since I want this code to run on a custom domain instead of &lt;code&gt;user.github.io/repository&lt;/code&gt;&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;hljs language-yml&quot;&gt;&lt;span class=&quot;hljs-attr&quot;&gt;- run:&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;|
  npm install
  npm test
  npm run build
  touch dist/.nojekyll
  echo &amp;quot;snoo.odyssey.codes&amp;quot; &amp;gt; dist/CNAME&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;With this last step we push the code to the &lt;code&gt;gh-pages&lt;/code&gt; branch of the repository&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;hljs language-yml&quot;&gt;&lt;span class=&quot;hljs-attr&quot;&gt;- name:&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;Deploy&lt;/span&gt;
&lt;span class=&quot;hljs-attr&quot;&gt;      uses:&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;JamesIves/github-pages-deploy-action@releases/v3&lt;/span&gt;
&lt;span class=&quot;hljs-attr&quot;&gt;      with:&lt;/span&gt;
&lt;span class=&quot;hljs-attr&quot;&gt;        GITHUB_TOKEN:&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;${{&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;secrets.GITHUB_TOKEN&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;}}&lt;/span&gt;
&lt;span class=&quot;hljs-attr&quot;&gt;        BRANCH:&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;gh-pages&lt;/span&gt;
&lt;span class=&quot;hljs-attr&quot;&gt;        FOLDER:&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;dist&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;If any of this steps fails the process will stop ensuring no ‚Äúbad build‚Äù will be out on production.&lt;/p&gt;&lt;h2 id=&quot;more-about-it&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#more-about-it&quot; aria-label=&quot;more about it permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;More about it&lt;/h2&gt;&lt;h3 id=&quot;committing-the-build-to-a-different-repository&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#committing-the-build-to-a-different-repository&quot; aria-label=&quot;committing the build to a different repository permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Committing the build to a different repository&lt;/h3&gt;&lt;p&gt;I had the use case of having to push the build to a different repository from the one where the sources are.&lt;/p&gt;&lt;p&gt;In this case I wanted to have the code of my blog on a repository and deploy this build to a GitHubs‚Äôs special repository named name.github.io, to serve my personal page from here since ‚Äògh-pages‚Äô does not work for this repository and my blog does not use Jekyll meaning the source code has to be on a separated repository and the build on master.&lt;/p&gt;&lt;p&gt;To create this token go to &lt;code&gt;Settings&lt;/code&gt; -&amp;gt; &lt;code&gt;Developer settings&lt;/code&gt; -&amp;gt; &lt;code&gt;Personal access tokens&lt;/code&gt; and create a new one.&lt;/p&gt;&lt;p&gt;With this configuration, we can use a personal token that needs to be set on Settings -&amp;gt; Secrets, since the &lt;code&gt;secrets.GITHUB_TOKEN&lt;/code&gt; only allows you to commit to your current repository.&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;hljs language-yml&quot;&gt;&lt;span class=&quot;hljs-attr&quot;&gt;- name:&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;Deploy&lt;/span&gt;
&lt;span class=&quot;hljs-attr&quot;&gt;      uses:&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;peaceiris/actions-gh-pages@v2&lt;/span&gt;
&lt;span class=&quot;hljs-attr&quot;&gt;      env:&lt;/span&gt;
&lt;span class=&quot;hljs-attr&quot;&gt;        PERSONAL_TOKEN:&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;${{&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;secrets.PERSONAL_TOKEN&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;}}&lt;/span&gt;
&lt;span class=&quot;hljs-attr&quot;&gt;        EXTERNAL_REPOSITORY:&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;dobladov/dobladov.github.io&lt;/span&gt;
&lt;span class=&quot;hljs-attr&quot;&gt;        PUBLISH_BRANCH:&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;master&lt;/span&gt;
&lt;span class=&quot;hljs-attr&quot;&gt;        PUBLISH_DIR:&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;./public&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&quot;testing-multiple-platforms&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#testing-multiple-platforms&quot; aria-label=&quot;testing multiple platforms permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Testing multiple platforms&lt;/h3&gt;&lt;p&gt;Different platforms might use different commands.&lt;/p&gt;&lt;p&gt;For example let‚Äôs say there‚Äôs a &lt;code&gt;rm&lt;/code&gt; in the scripts of the package.js while this build should work on MacOS and Linux, unfortunately it will fail on Windows since the &lt;code&gt;rm&lt;/code&gt; command is not available, with a multiple platform test we will realize that using a solution like &lt;code&gt;rimraf&lt;/code&gt; instead of &lt;code&gt;rm&lt;/code&gt; will solve the problem for Windows.&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;hljs language-yml&quot;&gt;&lt;span class=&quot;hljs-attr&quot;&gt;strategy:&lt;/span&gt;
&lt;span class=&quot;hljs-attr&quot;&gt;      matrix:&lt;/span&gt;
&lt;span class=&quot;hljs-attr&quot;&gt;        platform:&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;[ubuntu-latest,&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;macos-latest,&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;windows-latest]&lt;/span&gt;
&lt;span class=&quot;hljs-attr&quot;&gt;    runs-on:&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;${{&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;matrix.platform&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;}}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&quot;writing-a-cname-for-custom-domains&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#writing-a-cname-for-custom-domains&quot; aria-label=&quot;writing a cname for custom domains permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Writing a CNAME for custom domains&lt;/h3&gt;&lt;p&gt;If your deployments needs a custom domain don‚Äôt forget to write this file on each build.&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;hljs language-bash&quot;&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&amp;quot;snoo.odyssey.codes&amp;quot;&lt;/span&gt; &amp;gt; dist/CNAME&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&quot;running-actions-on-other-events&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#running-actions-on-other-events&quot; aria-label=&quot;running actions on other events permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Running actions on other events&lt;/h3&gt;&lt;p&gt;Actions are not limited to push to master, is possible to also execute test or do other task on pull request or any kind of supported action, also to schedule this tasks using cron.&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;hljs language-yml&quot;&gt;&lt;span class=&quot;hljs-attr&quot;&gt;on:&lt;/span&gt;
&lt;span class=&quot;hljs-attr&quot;&gt;  schedule:&lt;/span&gt;
&lt;span class=&quot;hljs-attr&quot;&gt;    - cron:&lt;/span&gt;  &lt;span class=&quot;hljs-string&quot;&gt;&amp;#x27;0 * * * *&amp;#x27;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&quot;not-only-for-deployments&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#not-only-for-deployments&quot; aria-label=&quot;not only for deployments permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Not only for deployments&lt;/h3&gt;&lt;p&gt;Actions can be used for creating new release packages, also notifications, emails can be send on each event, the limit is your üåà imagination üåà.&lt;/p&gt;&lt;h3 id=&quot;disadvantages&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#disadvantages&quot; aria-label=&quot;disadvantages permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Disadvantages&lt;/h3&gt;&lt;p&gt;One of the main disadvantages, is that like any other service if is down you will not be able of deploying using these workflows, It does not limit you to still do manual deployments for your application.&lt;/p&gt;&lt;p&gt;If you wonder why your perfectly working action does not work don‚Äôt forget to check: &lt;a href=&quot;https://status.github.com/&quot;&gt;https://status.github.com/&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Actions are not a 100% reliable if the infrastructure of GitHub fails, I had a problem where GitHub did not trigger one of my builds when I merged new code, a way to force a new commit without changes is to execute &lt;code&gt;git commit --allow-empty&lt;/code&gt;, this will cause the action to be executed.&lt;/p&gt;&lt;h2 id=&quot;documentation&quot; style=&quot;position:relative&quot;&gt;&lt;a href=&quot;#documentation&quot; aria-label=&quot;documentation permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Documentation&lt;/h2&gt;&lt;p&gt;Documentation worth reading:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/actions/setup-node&quot;&gt;Node Action documentation&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/JamesIves/github-pages-deploy-action&quot;&gt;Deploy Action documentation&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://help.github.com/en/actions/automating-your-workflow-with-github-actions&quot;&gt;GitHub Actions documentation&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/actions/checkout&quot;&gt;Checkout Action documentation&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Some examples of my GitHub Actions:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/dobladov/snoo/blob/master/.github/workflows/deploy.yml&quot;&gt;Snoo&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/dobladov/last-time/blob/master/.github/workflows/deploy.yml&quot;&gt;Last-Time&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/dobladov/mdx-blog/blob/master/.github/workflows/deploy.yml&quot;&gt;This blog&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</content:encoded></item></channel></rss>